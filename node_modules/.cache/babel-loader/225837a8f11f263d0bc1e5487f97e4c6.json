{"remainingRequest":"/home/anir/Desktop/practising_projects/fireblog/node_modules/babel-loader/lib/index.js!/home/anir/Desktop/practising_projects/fireblog/node_modules/eslint-loader/index.js??ref--13-0!/home/anir/Desktop/practising_projects/fireblog/src/store/index.js","dependencies":[{"path":"/home/anir/Desktop/practising_projects/fireblog/src/store/index.js","mtime":1645251735027},{"path":"/home/anir/Desktop/practising_projects/fireblog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/anir/Desktop/practising_projects/fireblog/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/anir/Desktop/practising_projects/fireblog/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/anir/Desktop/practising_projects/fireblog/src/store/index.js"],"names":["Vue","Vuex","firebase","db","use","Store","state","sampleBlogCards","blogTitle","blogCoverPhoto","blogDate","blogPosts","postLoaded","blogHTML","blogPhotoName","blogPhotoFileURL","blogPhotoPreview","editPost","profileEmail","profileFirstName","profileLastName","profileId","profileUserName","profileInitials","mutations","newBlogPost","payload","updateBlogTitle","fileNameChange","console","log","createFileURL","openPhotoPreview","updateUser","user","toggleEditPost","setProfileInfo","doc","id","data","email","firstName","lastName","userName","setProfileInitials","match","join","changeFirstName","changeLastName","changeUsername","actions","getCurrentUser","commit","collection","auth","currentUser","uid","dataBase","get","dbResults","updateUserSettings","update","username","profileUsername","getPost","orderBy","forEach","some","post","blogId","blogID","date","push","modules"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\"\n\nimport db from \"../firebase/firebaseInit\"\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    sampleBlogCards: [\n      {\n        blogTitle: \"Blog Card #1\",\n        blogCoverPhoto: \"stock-1\",\n        blogDate: \"May 1, 2021\",\n      },\n      {\n        blogTitle: \"Blog Card #2\",\n        blogCoverPhoto: \"stock-2\",\n        blogDate: \"May 1, 2021\",\n      },\n      {\n        blogTitle: \"Blog Card #3\",\n        blogCoverPhoto: \"stock-3\",\n        blogDate: \"May 1, 2021\",\n      },\n      {\n        blogTitle: \"Blog Card #4\",\n        blogCoverPhoto: \"stock-4\",\n        blogDate: \"May 1, 2021\",\n      },\n    ],\n    blogPosts:[],\n    postLoaded:null,\n    blogHTML: \"Write your blog title here...\",\n    blogTitle: \"\",\n    blogPhotoName: \"\",\n    blogPhotoFileURL: null,\n    blogPhotoPreview: null,\n    editPost: null,\n    profileEmail: null,\n    profileFirstName: null,\n    profileLastName: null,\n    profileId: null,\n    profileUserName: null,\n    profileInitials:null\n  },\n  mutations: {\n    newBlogPost(state, payload) {\n      state.blogHTML = payload;\n    },\n    updateBlogTitle(state, payload) {\n      state.blogTitle = payload;\n    },\n    fileNameChange(state, payload){\n      console.log(payload)\n      state.blogPhotoName = payload\n    },\n    createFileURL(state, payload){\n      state.blogPhotoFileURL = payload\n    },\n    openPhotoPreview(state){\n      state.blogPhotoPreview = !state.blogPhotoPreview;\n    }\n    ,\n    updateUser(state, payload){\n      state.user = payload\n    }\n    ,\n    toggleEditPost(state, payload) {\n      state.editPost = payload;\n    },\n    setProfileInfo(state,doc){\n  \n      state.profileId = doc.id;\n      state.profileEmail = doc.data().email;\n      state.profileFirstName = doc.data().firstName;\n      state.profileLastName = doc.data().lastName;\n      state.profileUserName = doc.data().userName;\n    },\n    setProfileInitials(state){\n   \n      state.profileInitials = state.profileFirstName.match(/(\\b\\s)?/g).join(\"\") + state.profileLastName.match(/(\\b\\s)?/g).join(\"\")\n    },\n    changeFirstName(state, payload) {\n      state.profileFirstName = payload;\n    },\n    changeLastName(state, payload) {\n      state.profileLastName = payload;\n    },\n    changeUsername(state, payload) {\n      state.profileUserName = payload;\n    },\n  },\n  actions: {\n    async getCurrentUser({commit}){\n      const dataBase = await db.collection(\"users\").doc(firebase.auth().currentUser.uid);\n      const dbResults = await dataBase.get();\n      commit(\"setProfileInfo\", dbResults);\n      commit(\"setProfileInitials\")\n   \n    },\n    async updateUserSettings({ commit, state }) {\n      const dataBase = await db.collection(\"users\").doc(state.profileId);\n      await dataBase.update({\n        firstName: state.profileFirstName,\n        lastName: state.profileLastName,\n        username: state.profileUsername,\n      });\n      commit(\"setProfileInitials\");\n    },\n    async getPost({state}){\n      const dataBase = await db.collection(\"blogPosts\").orderBy(\"date\", \"desc\");\n      const dbResults = await dataBase.get();\n      dbResults.forEach((doc)=> {\n        if(!state.blogPosts.some((post)=> post.blogId === doc.id)){\n          const data = {\n            blogId : doc.data().blogID,\n            blogHTML: doc.data().blogHTML,\n            blogTitle: doc.data().blogTitle,\n            blogDate: doc.data().date\n          }\n          state.blogPosts.push(data)\n        }\n      });\n      state.postLoaded = true;\n      console.log(state.blogPosts)\n    }\n  },\n  modules: {},\n});\n"]}]}